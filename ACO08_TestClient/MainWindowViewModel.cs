using System.ComponentModel;
using System.Runtime.CompilerServices;
using ACO08_Library.Public;

namespace ACO08_TestClient
{
    public class MainWindowViewModel : INotifyPropertyChanged
    {
        private ACO08_Device _selectedDevice;

        public TestClientInterface Model { get; }

        public ACO08_Device SelectedDevice
        {
            get { return _selectedDevice; }
            private set
            {
                _selectedDevice = value;
                OnPropertyChanged();
            }
        }


        public MainWindowViewModel(TestClientInterface model)
        {
            Model = model;
        }



        #region INotifyPropertyChanged

        // Autogenerated by ReSharper
        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void OnPropertyChanged([CallerMemberName] string propertyName = null)
        {
            PropertyChanged?.Invoke(this, new PropertyChangedEventArgs(propertyName));
        } 
        #endregion
    }
}
